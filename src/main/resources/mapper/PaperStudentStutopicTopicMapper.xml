<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suyi.demo.mapper.PaperStudentStutopicTopicMapper">
  <resultMap id="BaseResultMap" type="com.suyi.demo.model.PaperStudentStutopicTopic">
    <!--@mbg.generated-->
    <!--@Table sy.paper_student_stutopic_topic-->
    <result column="paper_id" jdbcType="VARCHAR" property="paperId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="paper_keyword" jdbcType="VARCHAR" property="paperKeyword" />
    <result column="abstract_text" jdbcType="LONGVARCHAR" property="abstractText" />
    <result column="doc_location" jdbcType="VARCHAR" property="docLocation" />
    <result column="uploading_time" jdbcType="TIMESTAMP" property="uploadingTime" />
    <result column="student_id" jdbcType="VARCHAR" property="studentId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="class_name" jdbcType="VARCHAR" property="className" />
    <result column="stutopic_id" jdbcType="VARCHAR" property="stutopicId" />
    <result column="select_time" jdbcType="TIMESTAMP" property="selectTime" />
    <result column="flag" jdbcType="VARCHAR" property="flag" />
    <result column="topic_id" jdbcType="VARCHAR" property="topicId" />
    <result column="course_id" jdbcType="VARCHAR" property="courseId" />
    <result column="teacher_id" jdbcType="VARCHAR" property="teacherId" />
    <result column="topic" jdbcType="VARCHAR" property="topic" />
    <result column="topic_keyword" jdbcType="VARCHAR" property="topicKeyword" />
    <result column="creation_time" jdbcType="TIMESTAMP" property="creationTime" />
    <result column="student_num" jdbcType="INTEGER" property="studentNum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    paper_id, title, author, `source`, paper_keyword, abstract_text, doc_location, uploading_time, 
    student_id, `name`, sex, major, class_name, stutopic_id, select_time, flag, topic_id, 
    course_id, teacher_id, topic, topic_keyword, creation_time, student_num
  </sql>
  <select id="selectByExample" parameterType="com.suyi.demo.model.PaperStudentStutopicTopicExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sy.paper_student_stutopic_topic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.suyi.demo.model.PaperStudentStutopicTopicExample">
    <!--@mbg.generated-->
    delete from sy.paper_student_stutopic_topic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.suyi.demo.model.PaperStudentStutopicTopic">
    <!--@mbg.generated-->
    insert into sy.paper_student_stutopic_topic (paper_id, title, author, 
      `source`, paper_keyword, abstract_text, 
      doc_location, uploading_time, student_id, 
      `name`, sex, major, class_name, 
      stutopic_id, select_time, flag, 
      topic_id, course_id, teacher_id, 
      topic, topic_keyword, creation_time, 
      student_num)
    values (#{paperId,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{source,jdbcType=VARCHAR}, #{paperKeyword,jdbcType=VARCHAR}, #{abstractText,jdbcType=LONGVARCHAR}, 
      #{docLocation,jdbcType=VARCHAR}, #{uploadingTime,jdbcType=TIMESTAMP}, #{studentId,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, #{major,jdbcType=VARCHAR}, #{className,jdbcType=VARCHAR}, 
      #{stutopicId,jdbcType=VARCHAR}, #{selectTime,jdbcType=TIMESTAMP}, #{flag,jdbcType=VARCHAR}, 
      #{topicId,jdbcType=VARCHAR}, #{courseId,jdbcType=VARCHAR}, #{teacherId,jdbcType=VARCHAR}, 
      #{topic,jdbcType=VARCHAR}, #{topicKeyword,jdbcType=VARCHAR}, #{creationTime,jdbcType=TIMESTAMP}, 
      #{studentNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.suyi.demo.model.PaperStudentStutopicTopic">
    <!--@mbg.generated-->
    insert into sy.paper_student_stutopic_topic
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="paperId != null">
        paper_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="source != null">
        `source`,
      </if>
      <if test="paperKeyword != null">
        paper_keyword,
      </if>
      <if test="abstractText != null">
        abstract_text,
      </if>
      <if test="docLocation != null">
        doc_location,
      </if>
      <if test="uploadingTime != null">
        uploading_time,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="className != null">
        class_name,
      </if>
      <if test="stutopicId != null">
        stutopic_id,
      </if>
      <if test="selectTime != null">
        select_time,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="topicId != null">
        topic_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="topic != null">
        topic,
      </if>
      <if test="topicKeyword != null">
        topic_keyword,
      </if>
      <if test="creationTime != null">
        creation_time,
      </if>
      <if test="studentNum != null">
        student_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="paperId != null">
        #{paperId,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="paperKeyword != null">
        #{paperKeyword,jdbcType=VARCHAR},
      </if>
      <if test="abstractText != null">
        #{abstractText,jdbcType=LONGVARCHAR},
      </if>
      <if test="docLocation != null">
        #{docLocation,jdbcType=VARCHAR},
      </if>
      <if test="uploadingTime != null">
        #{uploadingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="className != null">
        #{className,jdbcType=VARCHAR},
      </if>
      <if test="stutopicId != null">
        #{stutopicId,jdbcType=VARCHAR},
      </if>
      <if test="selectTime != null">
        #{selectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=VARCHAR},
      </if>
      <if test="topicId != null">
        #{topicId,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="topic != null">
        #{topic,jdbcType=VARCHAR},
      </if>
      <if test="topicKeyword != null">
        #{topicKeyword,jdbcType=VARCHAR},
      </if>
      <if test="creationTime != null">
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="studentNum != null">
        #{studentNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.suyi.demo.model.PaperStudentStutopicTopicExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from sy.paper_student_stutopic_topic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update sy.paper_student_stutopic_topic
    <set>
      <if test="record.paperId != null">
        paper_id = #{record.paperId,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.source != null">
        `source` = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.paperKeyword != null">
        paper_keyword = #{record.paperKeyword,jdbcType=VARCHAR},
      </if>
      <if test="record.abstractText != null">
        abstract_text = #{record.abstractText,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.docLocation != null">
        doc_location = #{record.docLocation,jdbcType=VARCHAR},
      </if>
      <if test="record.uploadingTime != null">
        uploading_time = #{record.uploadingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.major != null">
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.className != null">
        class_name = #{record.className,jdbcType=VARCHAR},
      </if>
      <if test="record.stutopicId != null">
        stutopic_id = #{record.stutopicId,jdbcType=VARCHAR},
      </if>
      <if test="record.selectTime != null">
        select_time = #{record.selectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.flag != null">
        flag = #{record.flag,jdbcType=VARCHAR},
      </if>
      <if test="record.topicId != null">
        topic_id = #{record.topicId,jdbcType=VARCHAR},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=VARCHAR},
      </if>
      <if test="record.topic != null">
        topic = #{record.topic,jdbcType=VARCHAR},
      </if>
      <if test="record.topicKeyword != null">
        topic_keyword = #{record.topicKeyword,jdbcType=VARCHAR},
      </if>
      <if test="record.creationTime != null">
        creation_time = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.studentNum != null">
        student_num = #{record.studentNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update sy.paper_student_stutopic_topic
    set paper_id = #{record.paperId,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      `source` = #{record.source,jdbcType=VARCHAR},
      paper_keyword = #{record.paperKeyword,jdbcType=VARCHAR},
      abstract_text = #{record.abstractText,jdbcType=LONGVARCHAR},
      doc_location = #{record.docLocation,jdbcType=VARCHAR},
      uploading_time = #{record.uploadingTime,jdbcType=TIMESTAMP},
      student_id = #{record.studentId,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=CHAR},
      major = #{record.major,jdbcType=VARCHAR},
      class_name = #{record.className,jdbcType=VARCHAR},
      stutopic_id = #{record.stutopicId,jdbcType=VARCHAR},
      select_time = #{record.selectTime,jdbcType=TIMESTAMP},
      flag = #{record.flag,jdbcType=VARCHAR},
      topic_id = #{record.topicId,jdbcType=VARCHAR},
      course_id = #{record.courseId,jdbcType=VARCHAR},
      teacher_id = #{record.teacherId,jdbcType=VARCHAR},
      topic = #{record.topic,jdbcType=VARCHAR},
      topic_keyword = #{record.topicKeyword,jdbcType=VARCHAR},
      creation_time = #{record.creationTime,jdbcType=TIMESTAMP},
      student_num = #{record.studentNum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into sy.paper_student_stutopic_topic
    (paper_id, title, author, `source`, paper_keyword, abstract_text, doc_location, uploading_time, 
      student_id, `name`, sex, major, class_name, stutopic_id, select_time, flag, topic_id, 
      course_id, teacher_id, topic, topic_keyword, creation_time, student_num)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.paperId,jdbcType=VARCHAR}, #{item.title,jdbcType=VARCHAR}, #{item.author,jdbcType=VARCHAR}, 
        #{item.source,jdbcType=VARCHAR}, #{item.paperKeyword,jdbcType=VARCHAR}, #{item.abstractText,jdbcType=LONGVARCHAR}, 
        #{item.docLocation,jdbcType=VARCHAR}, #{item.uploadingTime,jdbcType=TIMESTAMP}, 
        #{item.studentId,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR}, #{item.sex,jdbcType=CHAR}, 
        #{item.major,jdbcType=VARCHAR}, #{item.className,jdbcType=VARCHAR}, #{item.stutopicId,jdbcType=VARCHAR}, 
        #{item.selectTime,jdbcType=TIMESTAMP}, #{item.flag,jdbcType=VARCHAR}, #{item.topicId,jdbcType=VARCHAR}, 
        #{item.courseId,jdbcType=VARCHAR}, #{item.teacherId,jdbcType=VARCHAR}, #{item.topic,jdbcType=VARCHAR}, 
        #{item.topicKeyword,jdbcType=VARCHAR}, #{item.creationTime,jdbcType=TIMESTAMP}, 
        #{item.studentNum,jdbcType=INTEGER})
    </foreach>
  </insert>
</mapper>