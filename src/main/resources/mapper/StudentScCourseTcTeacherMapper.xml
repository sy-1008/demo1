<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suyi.demo.mapper.StudentScCourseTcTeacherMapper">
  <resultMap id="BaseResultMap" type="com.suyi.demo.model.StudentScCourseTcTeacher">
    <!--@mbg.generated-->
    <!--@Table sy.student_sc_course_tc_teacher-->
    <result column="sc_id" jdbcType="VARCHAR" property="scId" />
    <result column="student_id" jdbcType="VARCHAR" property="studentId" />
    <result column="student_name" jdbcType="VARCHAR" property="studentName" />
    <result column="student_sex" jdbcType="CHAR" property="studentSex" />
    <result column="student_major" jdbcType="VARCHAR" property="studentMajor" />
    <result column="student_class_name" jdbcType="VARCHAR" property="studentClassName" />
    <result column="course_id" jdbcType="VARCHAR" property="courseId" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="term" jdbcType="VARCHAR" property="term" />
    <result column="course_hour" jdbcType="INTEGER" property="courseHour" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="teacher_id" jdbcType="VARCHAR" property="teacherId" />
    <result column="tea_identity" jdbcType="VARCHAR" property="teaIdentity" />
    <result column="teach_hour" jdbcType="INTEGER" property="teachHour" />
    <result column="teacher_name" jdbcType="VARCHAR" property="teacherName" />
    <result column="teacher_sex" jdbcType="CHAR" property="teacherSex" />
    <result column="protitle" jdbcType="VARCHAR" property="protitle" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    sc_id, student_id, student_name, student_sex, student_major, student_class_name, 
    course_id, course_name, term, course_hour, score, teacher_id, tea_identity, teach_hour, 
    teacher_name, teacher_sex, protitle, phone
  </sql>
  <select id="selectByExample" parameterType="com.suyi.demo.model.StudentScCourseTcTeacherExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sy.student_sc_course_tc_teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.suyi.demo.model.StudentScCourseTcTeacherExample">
    <!--@mbg.generated-->
    delete from sy.student_sc_course_tc_teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.suyi.demo.model.StudentScCourseTcTeacher">
    <!--@mbg.generated-->
    insert into sy.student_sc_course_tc_teacher (sc_id, student_id, student_name, 
      student_sex, student_major, student_class_name, 
      course_id, course_name, term, 
      course_hour, score, teacher_id, 
      tea_identity, teach_hour, teacher_name, 
      teacher_sex, protitle, phone
      )
    values (#{scId,jdbcType=VARCHAR}, #{studentId,jdbcType=VARCHAR}, #{studentName,jdbcType=VARCHAR}, 
      #{studentSex,jdbcType=CHAR}, #{studentMajor,jdbcType=VARCHAR}, #{studentClassName,jdbcType=VARCHAR}, 
      #{courseId,jdbcType=VARCHAR}, #{courseName,jdbcType=VARCHAR}, #{term,jdbcType=VARCHAR}, 
      #{courseHour,jdbcType=INTEGER}, #{score,jdbcType=INTEGER}, #{teacherId,jdbcType=VARCHAR}, 
      #{teaIdentity,jdbcType=VARCHAR}, #{teachHour,jdbcType=INTEGER}, #{teacherName,jdbcType=VARCHAR}, 
      #{teacherSex,jdbcType=CHAR}, #{protitle,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.suyi.demo.model.StudentScCourseTcTeacher">
    <!--@mbg.generated-->
    insert into sy.student_sc_course_tc_teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="scId != null">
        sc_id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="studentName != null">
        student_name,
      </if>
      <if test="studentSex != null">
        student_sex,
      </if>
      <if test="studentMajor != null">
        student_major,
      </if>
      <if test="studentClassName != null">
        student_class_name,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="term != null">
        term,
      </if>
      <if test="courseHour != null">
        course_hour,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="teaIdentity != null">
        tea_identity,
      </if>
      <if test="teachHour != null">
        teach_hour,
      </if>
      <if test="teacherName != null">
        teacher_name,
      </if>
      <if test="teacherSex != null">
        teacher_sex,
      </if>
      <if test="protitle != null">
        protitle,
      </if>
      <if test="phone != null">
        phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="scId != null">
        #{scId,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null">
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentSex != null">
        #{studentSex,jdbcType=CHAR},
      </if>
      <if test="studentMajor != null">
        #{studentMajor,jdbcType=VARCHAR},
      </if>
      <if test="studentClassName != null">
        #{studentClassName,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="term != null">
        #{term,jdbcType=VARCHAR},
      </if>
      <if test="courseHour != null">
        #{courseHour,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="teaIdentity != null">
        #{teaIdentity,jdbcType=VARCHAR},
      </if>
      <if test="teachHour != null">
        #{teachHour,jdbcType=INTEGER},
      </if>
      <if test="teacherName != null">
        #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="teacherSex != null">
        #{teacherSex,jdbcType=CHAR},
      </if>
      <if test="protitle != null">
        #{protitle,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.suyi.demo.model.StudentScCourseTcTeacherExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from sy.student_sc_course_tc_teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update sy.student_sc_course_tc_teacher
    <set>
      <if test="record.scId != null">
        sc_id = #{record.scId,jdbcType=VARCHAR},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=VARCHAR},
      </if>
      <if test="record.studentName != null">
        student_name = #{record.studentName,jdbcType=VARCHAR},
      </if>
      <if test="record.studentSex != null">
        student_sex = #{record.studentSex,jdbcType=CHAR},
      </if>
      <if test="record.studentMajor != null">
        student_major = #{record.studentMajor,jdbcType=VARCHAR},
      </if>
      <if test="record.studentClassName != null">
        student_class_name = #{record.studentClassName,jdbcType=VARCHAR},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=VARCHAR},
      </if>
      <if test="record.courseName != null">
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.term != null">
        term = #{record.term,jdbcType=VARCHAR},
      </if>
      <if test="record.courseHour != null">
        course_hour = #{record.courseHour,jdbcType=INTEGER},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=VARCHAR},
      </if>
      <if test="record.teaIdentity != null">
        tea_identity = #{record.teaIdentity,jdbcType=VARCHAR},
      </if>
      <if test="record.teachHour != null">
        teach_hour = #{record.teachHour,jdbcType=INTEGER},
      </if>
      <if test="record.teacherName != null">
        teacher_name = #{record.teacherName,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherSex != null">
        teacher_sex = #{record.teacherSex,jdbcType=CHAR},
      </if>
      <if test="record.protitle != null">
        protitle = #{record.protitle,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update sy.student_sc_course_tc_teacher
    set sc_id = #{record.scId,jdbcType=VARCHAR},
      student_id = #{record.studentId,jdbcType=VARCHAR},
      student_name = #{record.studentName,jdbcType=VARCHAR},
      student_sex = #{record.studentSex,jdbcType=CHAR},
      student_major = #{record.studentMajor,jdbcType=VARCHAR},
      student_class_name = #{record.studentClassName,jdbcType=VARCHAR},
      course_id = #{record.courseId,jdbcType=VARCHAR},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      term = #{record.term,jdbcType=VARCHAR},
      course_hour = #{record.courseHour,jdbcType=INTEGER},
      score = #{record.score,jdbcType=INTEGER},
      teacher_id = #{record.teacherId,jdbcType=VARCHAR},
      tea_identity = #{record.teaIdentity,jdbcType=VARCHAR},
      teach_hour = #{record.teachHour,jdbcType=INTEGER},
      teacher_name = #{record.teacherName,jdbcType=VARCHAR},
      teacher_sex = #{record.teacherSex,jdbcType=CHAR},
      protitle = #{record.protitle,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into sy.student_sc_course_tc_teacher
    (sc_id, student_id, student_name, student_sex, student_major, student_class_name, 
      course_id, course_name, term, course_hour, score, teacher_id, tea_identity, teach_hour, 
      teacher_name, teacher_sex, protitle, phone)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.scId,jdbcType=VARCHAR}, #{item.studentId,jdbcType=VARCHAR}, #{item.studentName,jdbcType=VARCHAR}, 
        #{item.studentSex,jdbcType=CHAR}, #{item.studentMajor,jdbcType=VARCHAR}, #{item.studentClassName,jdbcType=VARCHAR}, 
        #{item.courseId,jdbcType=VARCHAR}, #{item.courseName,jdbcType=VARCHAR}, #{item.term,jdbcType=VARCHAR}, 
        #{item.courseHour,jdbcType=INTEGER}, #{item.score,jdbcType=INTEGER}, #{item.teacherId,jdbcType=VARCHAR}, 
        #{item.teaIdentity,jdbcType=VARCHAR}, #{item.teachHour,jdbcType=INTEGER}, #{item.teacherName,jdbcType=VARCHAR}, 
        #{item.teacherSex,jdbcType=CHAR}, #{item.protitle,jdbcType=VARCHAR}, #{item.phone,jdbcType=VARCHAR}
        )
    </foreach>
  </insert>
</mapper>